// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

enum Currencies {
  USD
  EUR
  JPY
  GBP
  AUD
  CAD
  CHF
  CNY
  SEK
  NZD
  NOK
  KRW
  INR
  BRL
  RUB
  ZAR
  TRY
  MXN
  SGD
  HKD

  @@schema("public")
}

model User {
  id              Int        @id @default(autoincrement())
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  email           String     @unique
  authId          String
  name            String?
  avatarUrl       String?
  defaultCurrency Currencies
  Accounts        Account[]

  @@schema("public")
}

// This is not a user account, but a budget account
model Account {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String
  description String?
  currency    Currencies
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  Expense     Expense[]
  Category    Category[]

  @@schema("public")
}

model Category {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  budget    Int
  account   Account    @relation(fields: [accountId], references: [id])
  accountId Int
  sup       Category?  @relation("CategoryHierarchy", fields: [supId], references: [id])
  supId     Int?
  subs      Category[] @relation("CategoryHierarchy")
  Expense   Expense[]

  @@schema("public")
}

model Expense {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  amount      Int
  date        DateTime
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   Int

  @@schema("public")
}
