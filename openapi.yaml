components:
  schemas:
    CategoryCreate:
      properties:
        budget:
          type: integer
        name:
          type: string
      required:
      - budget
      - name
      title: CategoryCreate
      type: object
    CategoryExpense:
      properties:
        budget:
          type: integer
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - budget
      - id
      - name
      title: CategoryExpense
      type: object
    CategoryFull:
      properties:
        budget:
          type: integer
        id:
          format: uuid
          type: string
        name:
          type: string
        spent:
          type: integer
      required:
      - budget
      - id
      - name
      - spent
      title: CategoryFull
      type: object
    CategoryOverview:
      properties:
        budget:
          type: integer
        months:
          additionalProperties:
            items:
              type: integer
            type: array
          type: object
      required:
      - budget
      - months
      title: CategoryOverview
      type: object
    ExpenseCreate:
      properties:
        amount:
          type: integer
        category_id:
          format: uuid
          type: string
        date:
          format: date
          type: string
        description:
          oneOf:
          - type: string
          - type: 'null'
        title:
          type: string
      required:
      - amount
      - category_id
      - date
      - title
      title: ExpenseCreate
      type: object
    ExpensePublic:
      properties:
        amount:
          type: integer
        category:
          $ref: '#/components/schemas/CategoryExpense'
        date:
          format: date
          type: string
        description:
          oneOf:
          - type: string
          - type: 'null'
        id:
          format: uuid
          type: string
        title:
          type: string
      required:
      - amount
      - category
      - date
      - id
      - title
      title: Expense
      type: object
    UserCreate:
      properties:
        avatar_url:
          oneOf:
          - type: string
          - type: 'null'
        default_currency:
          enum:
          - USD
          - EUR
          - JPY
          - GBP
          - AUD
          - CAD
          - CHF
          - CNY
          - SEK
          - NZD
          - NOK
          - KRW
          - INR
          - BRL
          - RUB
          - ZAR
          - TRY
          - MXN
          - SGD
          - HKD
          title: Default Currency
          type: string
        email:
          type: string
        id:
          format: uuid
          type: string
        name:
          oneOf:
          - type: string
          - type: 'null'
      required:
      - default_currency
      - email
      - id
      title: UserCreate
      type: object
    UserEdit:
      properties:
        avatar_url:
          oneOf:
          - type: string
          - type: 'null'
        name:
          oneOf:
          - type: string
          - type: 'null'
      required: []
      title: UserEdit
      type: object
    UserPublic:
      properties:
        avatar_url:
          oneOf:
          - type: string
          - type: 'null'
        default_currency:
          enum:
          - USD
          - EUR
          - JPY
          - GBP
          - AUD
          - CAD
          - CHF
          - CNY
          - SEK
          - NZD
          - NOK
          - KRW
          - INR
          - BRL
          - RUB
          - ZAR
          - TRY
          - MXN
          - SGD
          - HKD
          title: Default Currency
          type: string
        email:
          type: string
        id:
          format: uuid
          type: string
        name:
          oneOf:
          - type: string
          - type: 'null'
      required:
      - default_currency
      - email
      - id
      title: User
      type: object
  securitySchemes:
    BearerToken:
      bearerFormat: JWT
      description: JWT api-key authentication and authorization.
      name: Authorization
      scheme: Bearer
      type: http
info:
  title: Dimewise
  version: 0.0.1
openapi: 3.1.0
paths:
  /api/v1:
    get:
      deprecated: false
      operationId: ApiV1Root
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Request fulfilled, document follows
          headers: {}
      summary: Root
  /api/v1/categories:
    get:
      deprecated: false
      operationId: ApiV1CategoriesGetCategories
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: from_date
        required: false
        schema:
          oneOf:
          - format: date-time
            type: string
          - type: 'null'
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: to_date
        required: false
        schema:
          oneOf:
          - format: date-time
            type: string
          - type: 'null'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CategoryFull'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetCategories
    post:
      deprecated: false
      operationId: ApiV1CategoriesCreateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: CreateCategory
  /api/v1/categories/overview_year:
    get:
      deprecated: false
      operationId: ApiV1CategoriesOverviewYearGetCategoriesPerMonth
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: from_date
        required: true
        schema:
          format: date-time
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: to_date
        required: true
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryOverview'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetCategoriesPerMonth
  /api/v1/categories/{category_id}:
    delete:
      deprecated: false
      operationId: ApiV1CategoriesCategoryIdDeleteCategory
      parameters:
      - deprecated: false
        in: path
        name: category_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: DeleteCategory
    patch:
      deprecated: false
      operationId: ApiV1CategoriesCategoryIdUpdateCategory
      parameters:
      - deprecated: false
        in: path
        name: category_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
        required: true
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: UpdateCategory
  /api/v1/expenses:
    get:
      deprecated: false
      operationId: ApiV1ExpensesGetExpenses
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: from_date
        required: false
        schema:
          oneOf:
          - format: date-time
            type: string
          - type: 'null'
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: to_date
        required: false
        schema:
          oneOf:
          - format: date-time
            type: string
          - type: 'null'
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: category_ids
        required: false
        schema:
          oneOf:
          - items:
              format: uuid
              type: string
            type: array
          - type: 'null'
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: limit
        required: false
        schema:
          oneOf:
          - type: integer
          - type: 'null'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExpensePublic'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetExpenses
      tags:
      - transactions
    post:
      deprecated: false
      operationId: ApiV1ExpensesCreateExpense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCreate'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: CreateExpense
      tags:
      - transactions
  /api/v1/expenses/{expense_id}:
    delete:
      deprecated: false
      operationId: ApiV1ExpensesExpenseIdDeleteExpense
      parameters:
      - deprecated: false
        in: path
        name: expense_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: DeleteExpense
      tags:
      - transactions
    patch:
      deprecated: false
      operationId: ApiV1ExpensesExpenseIdUpdateExpense
      parameters:
      - deprecated: false
        in: path
        name: expense_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCreate'
        required: true
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: UpdateExpense
      tags:
      - transactions
  /api/v1/users/me-detail:
    get:
      deprecated: false
      operationId: ApiV1UsersMeDetailGetMeDetail
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
          description: Request fulfilled, document follows
          headers: {}
      summary: GetMeDetail
      tags:
      - me-detail
    patch:
      deprecated: false
      operationId: ApiV1UsersMeDetailUpdateMeDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEdit'
        required: true
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: UpdateMeDetail
      tags:
      - me-detail
  /api/v1/users/register:
    post:
      deprecated: false
      operationId: ApiV1UsersRegisterCreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: CreateUser
security:
- BearerToken: []
servers:
- url: /
