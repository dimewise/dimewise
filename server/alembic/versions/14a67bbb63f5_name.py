"""
Initial DB Schema

Revision ID: 14a67bbb63f5
Revises:
Create Date: 2025-04-05 21:17:24.703819

"""

from collections.abc import Sequence

import advanced_alchemy
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "14a67bbb63f5"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("avatar_url", sa.String(), nullable=True),
        sa.Column(
            "default_currency",
            sa.Enum(
                "USD",
                "EUR",
                "JPY",
                "GBP",
                "AUD",
                "CAD",
                "CHF",
                "CNY",
                "SEK",
                "NZD",
                "NOK",
                "KRW",
                "INR",
                "BRL",
                "RUB",
                "ZAR",
                "TRY",
                "MXN",
                "SGD",
                "HKD",
                name="currencies",
                create_constraint=True,
            ),
            nullable=False,
        ),
        sa.Column("id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    op.create_table(
        "account",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "currency",
            sa.Enum(
                "USD",
                "EUR",
                "JPY",
                "GBP",
                "AUD",
                "CAD",
                "CHF",
                "CNY",
                "SEK",
                "NZD",
                "NOK",
                "KRW",
                "INR",
                "BRL",
                "RUB",
                "ZAR",
                "TRY",
                "MXN",
                "SGD",
                "HKD",
                name="currencies",
                create_constraint=True,
            ),
            nullable=False,
        ),
        sa.Column("user_id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_account_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_account")),
    )
    op.create_table(
        "category",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("budget", sa.Integer(), nullable=False),
        sa.Column("user_id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_category_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_category")),
    )
    op.create_table(
        "expense",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("category_id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("user_id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("id", advanced_alchemy.types.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", advanced_alchemy.types.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["category_id"], ["category.id"], name=op.f("fk_expense_category_id_category")),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_expense_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_expense")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("expense")
    op.drop_table("category")
    op.drop_table("account")
    op.drop_table("user")
    # ### end Alembic commands ###
